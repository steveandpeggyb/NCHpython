Using an ODBC driver

Microsoft have written and distributed multiple ODBC drivers for SQL Server:
•{SQL Server} - released with SQL Server 2000
•{SQL Native Client} - released with SQL Server 2005 (also known as version 9.0)
•{SQL Server Native Client 10.0} - released with SQL Server 2008
•{SQL Server Native Client 11.0} - released with SQL Server 2012
•{ODBC Driver 11 for SQL Server} - supports SQL Server 2005 through 2014
•{ODBC Driver 13 for SQL Server} - supports SQL Server 2005 through 2016
•{ODBC Driver 13.1 for SQL Server} - supports SQL Server 2008 through 2016
•{ODBC Driver 17 for SQL Server} - supports SQL Server 2008 through 2017

Note that the "SQL Server Native Client ..." and earlier drivers are deprecated and should not be used for new development.

The connection strings for all these drivers are essentially the same, for example:
DRIVER={ODBC Driver 17 for SQL Server};SERVER=test;DATABASE=test;UID=user;PWD=password


or, in Python:

conn = pyodbc.connect('DRIVER={ODBC Driver 17 for SQL Server};SERVER=test;DATABASE=test;UID=user;PWD=password')


SAM_DOMAIN_OBJECT	                       0	           0   
SAM_GROUP_OBJECT	                10000000	 268,435,456 
SAM_NON_SECURITY_GROUP_OBJECT	    10000001	 268,435,457 
SAM_ALIAS_OBJECT	                20000000	 536,870,912 
SAM_NON_SECURITY_ALIAS_OBJECT	    20000001	 536,870,913 
SAM_USER_OBJECT                     30000000	 805,306,368 
SAM_MACHINE_ACCOUNT	                30000001	 805,306,369 
SAM_TRUST_ACCOUNT	                30000002	 805,306,370 
SAM_APP_BASIC_GROUP	                40000000   1,073,741,824 
SAM_APP_QUERY_GROUP	                40000001   1,073,741,825 


#   AD Query that will return all data from user or SAM_APP_BASIC_GROUP
import pyad.adquery as adquery
import pprint

q = adquery.ADQuery()

q.execute_query(
    attributes = ["member", "sAMAccountType", "sAMAccountName"],
    where_clause=("sAMAccountName = 'csb003'"),
)

for row in q.get_results():
    pprint.pprint( row )